/*
	结构体
	1. 定义
		a. 先声明结构体类型再定义变量名
		b. 在声明类型的同时定义变量
		c. 直接定义结构体类型变量（无类型名） 
	2. 初始化和使用 
		struct 结构体名 结构体变量名 = {属性1的值，属性2的值......}
		struct 结构体名 结构体变量名 = {.属性n名称=属性n的值......}
		struct 结构体名 结构体变量名; 
			普通变量：结构体变量名.属性1 = 属性1的值 ；
			字符数组变量(结构体变量名.属性名是个地址)：strcpy(结构体变量名.属性名, 属性值); 
			指针变量 (&结构体变量名)->属性名 
	3. 结构体类型和结构体变量
		结构体类型和结构体变量关系：
		结构体类型：指定了一个结构体类型，它相当于一个模型，但其中并无具体数据，系统对之也不分配实际内存单元。
		结构体变量：系统根据结构体类型（内部成员状况）为之分配空间。	
	4. 结构体大小
		一个结构体大小 > 各个属性占用字节之和 （因为结构体中的不同类型成员需要偏移对齐，如：char name[21]实际需要占用21+3个字节进行对齐） 
	5. 结构体数组
		struct 结构体名 结构体变量名[数组元素数量]={
			{结构体1属性1, 结构体1属性2,......},
			{结构体2属性1, 结构体2属性2,......},
		};	
	6. 结构体大小结构体数组大小
		sizeof(结构体数组变量)/sizeof(结构体数组变量[0])
	7. 结构体 嵌套
	8. 结构体属性是普通类型或指针类型
		 指针类型
		 	申请空间，释放空间 
	8. 结构体 赋值
		8.1 两个结构体相互赋值，修改其中一个的变量 
		8.2 将结构体赋值给结构体类型的指针 
	10. 结构体与指针
		结构体 属性为指针（一级指针、二级指针） 
		结构体类型的指针 
		-> 运算符 
	11. 栈结构体和堆结构体
	 
*/ 
struct student {
	int num;
	char name[21];
	int age;
	char gender;
	char address[51]; 
	
};
